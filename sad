local Library = loadstring(Game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
local Window = Library:NewWindow("Script")
 
local Tab = Window:NewSection("Credits: TGMANKASKE")

Tab:CreateButton("Discord Group", function()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local UserInputService = game:GetService("UserInputService")

local savedPosition = nil

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.P then
        savedPosition = humanoidRootPart.Position
        print("Posição salva:", savedPosition)
    end
end)

-- Para outros scripts acessarem a posição salva, você pode armazenar isso num Value no Player, por exemplo:
local savedPosValue = Instance.new("Vector3Value")
savedPosValue.Name = "SavedPosition"
savedPosValue.Value = Vector3.new(0,0,0)
savedPosValue.Parent = player

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.P then
        savedPosValue.Value = humanoidRootPart.Position
        print("Posição salva no Value:", savedPosValue.Value)
    end
end)

end)



Tab:CreateButton("Discord Group", function()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local savedPosValue = player:WaitForChild("SavedPosition")

local moving = false
local speed = 50 -- velocidade ajustável (está em studs por segundo)
local hoverHeight = 30 -- altura para subir antes de se mover horizontalmente

local function lerp(a, b, t)
    return a + (b - a) * t
end

local function moveToPosition(targetPos)
    moving = true

    -- Passo 1: subir até hoverHeight acima da posição atual
    local startPos = humanoidRootPart.Position
    local upTarget = Vector3.new(startPos.X, startPos.Y + hoverHeight, startPos.Z)
    
    while (humanoidRootPart.Position - upTarget).Magnitude > 0.5 do
        local direction = (upTarget - humanoidRootPart.Position).Unit
        humanoidRootPart.Velocity = direction * speed
        RunService.Heartbeat:Wait()
    end
    
    -- Passo 2: mover horizontalmente até acima do target (mesma altura hoverHeight)
    local horizontalTarget = Vector3.new(targetPos.X, upTarget.Y, targetPos.Z)
    
    while (humanoidRootPart.Position - horizontalTarget).Magnitude > 0.5 do
        local direction = (horizontalTarget - humanoidRootPart.Position).Unit
        humanoidRootPart.Velocity = direction * speed
        RunService.Heartbeat:Wait()
    end
    
    -- Passo 3: descer até o target
    while (humanoidRootPart.Position - targetPos).Magnitude > 0.5 do
        local direction = (targetPos - humanoidRootPart.Position).Unit
        humanoidRootPart.Velocity = direction * speed
        RunService.Heartbeat:Wait()
    end

    -- Para o movimento
    humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
    moving = false
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.O then
        if not moving and savedPosValue.Value.Magnitude > 0 then
            coroutine.wrap(function()
                moveToPosition(savedPosValue.Value)
            end)()
        end
    end
end)

end)
